* Basic Rest API (Vapor Framework)

Note : Struktur folder dibawah berlaku untuk RestAPI dengan Vapor.

1. Aliran data :
    * Request Client (Permintaan masuk dari client berupa Protocol HTTP (GET, POST, PUT, & DELETE) dengan endpoint).
    * Routing (Memetakan jalur dengan mencocokan ke Controller).
    * Controllers (Menerima jalur routing dan akan memanggil Service, Transisi dari Model ke DTO).
    * Services (Melakukan interaksi dengan Models untuk meminta data yang diinginkan oleh Controller, Transisi dari Model ke DTO)
    * Models (Berinteraksi dengan sumber data seperti database atau API lain).
    * DTO (Meerubah bentuk data dari Model ke DTO untuk melindungi data sensitif dan Menyusun model response ke client).
    * Response API (Berupa JSON, XML atau yang lainya).
    
    NOTE : Transisi dari Model ke DTO bisa terjadi di Controller atau Service (Sesuai kebutuhan aplikasi).
    
    Proses : Database -> Models -> Service -> DTO -> Controller -> Routing -> (Response API) / <- (Request) -> Client

2. Struktur Folder
    * Source/App/Controller :
        - Menangani logika dan endpoint API.
        - Menerima permintaan dari client seperti POST, GET, PUT, DELETE lalu merespon kembali ke client.
        - Melakukan filter data sensitif yang akan dikembalikan ke client.
        - Menjadi penghubung antara client dengan Services dan Models.
        - Mengembalikas response ke client berupa JSON, XML atau yang lainya.
        
    * Source/App/DTOs :
        - Tempat dimana standarisasi format request dan response antara client dan server.
        - Representasi dari data yang akan dikirim kembali ke client.
        - Filter data sensitif (Menyembunyikan data yang tidak boleh dikirim ke client).
        
    * Source/App/Migrations :
        - Membuat database berikut dengan tabel-tabel yang dibutuhkan aplikasi.
        - Mendifinisikan kolom (field), termasuk tipe data, panjang dan atribut lainya.
        - Melakukan CRUD pada database.
        - Version control pada database, merip dengan cara kerja git.
        - Standarisasi atau memastikan database tetap konsistem di dalam aplikasi ini.
        
    * Source/App/Models :
        - Merepresentasikan model data dari database / sumber data ke dalam aplikasi.
        - Representasi keseluruhan data dari database dan tidak melihat apakah data atau entitas tertentu akan dikirim ke client atau tidak.
        
    * Source/App/Routes :
        - Melakukan konfigurasi seluruh akses rute API.
        - Menghubungkan URL endpoint ke fungsi Contoller.
        
    * Source/App/Service :
        - Mengatur logika bisnis dari aplikasi.
        - Mengambil data dari database lalu merubahnya ke dalam bentuk Model.

